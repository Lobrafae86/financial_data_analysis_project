/*
============================================================
Quality Checks
============================================================
Script Purpose:
    This script performs various quality checks for data 
    consistency, accuracy, and standarizations accross
    the 'silver' schema. It includes checks for:
    - Null or duplicate primary keys.
    - Unwanted spaces in string fields.
    - Data standarizations and consistency.

Usage Notes:
    - Run these checks after data loading Silver layer.
    - Investigate and resolve any discrepancies found during 
    the checks.
============================================================
/*
--BALANCE SHEET
-- Check for Nulls or Duplicates in Primary Key
-- Expectation: no results
SELECT 
Amount,
count(*)
FROM bronze.balance_sheet_3
GROUP BY Amount
HAVING COUNT(*) > 1 OR Amount IS NULL

-- Check for unwanted Spaces
-- Expectation: No results
Select
Amount
FROM bronze.balance_sheet_3
WHERE Amount != TRIM(Amount)

-- Data Standarization & Consistency
SELECT DISTINCT
company 
FROM bronze.balance_sheet_3

SELECT 
    UPPER(TRIM(Account_Description)) as Account_Description,
    UPPER(TRIM(company)) as Company,
    TRIM(year) as Year,
    FORMAT(
        CASE 
            WHEN Amount IS NULL THEN 0 
            ELSE Amount
        END, 'N0'
    ) AS Amount
INTO
    silver.balance_sheet
FROM bronze.balance_sheet_3;


-- INCOME STATEMENT
-- Check for Nulls or Duplicates in Primary Key
-- Expectation: no results
SELECT 
Amount,
COUNT(*)
FROM bronze.income_statement_3
GROUP BY Amount
HAVING COUNT(*) > 1 OR Amount IS NULL

-- Check for unwanted Spaces
-- Expectation: No results
Select
company
FROM bronze.income_statement_3
WHERE company != TRIM(company)

-- Data Standarization & Consistency
SELECT DISTINCT 
Company
FROM bronze.income_statement_3

SELECT 
    UPPER(TRIM(Account_Description)) AS Account_Description,
    UPPER(TRIM(company)) AS Company,
    UPPER(TRIM(year)) as Year,
    FORMAT(
        CASE 
            WHEN Amount IS NULL THEN 0
            ELSE Amount
        END, 'N0'
    ) AS Amount
INTO
    silver.income_statement
FROM bronze.income_statement_3

-- STOCK MARKET PRICES
-- Check for unwanted Spaces
-- Expectation: No results
SELECT 
NVDA,
COUNT (*)
FROM bronze.stock_market_prices_filtered
GROUP BY NVDA
HAVING COUNT (*) > 1 OR NVDA IS NULL

SELECT *
INTO
    silver.stock_market_price
FROM bronze.stock_market_prices_filtered
